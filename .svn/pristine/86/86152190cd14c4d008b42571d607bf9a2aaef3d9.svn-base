<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	"> 
    <!--
    	使spring扫描包下的所有类，让标注spring注解的类生效 
    	若扫描到有@Component @Controller@Service等这些注解的类，则把这些类注册为bean
    -->
    <context:component-scan base-package="com.service"/> 
    <context:component-scan base-package="com.dao"/>  
    
    
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    	<property name="location">
    		<value>classpath:database.properties</value>
    	</property>
    </bean>   
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">   
        <property name="driverClassName" value="${driver}" />
        <property name="url" value="${url}" />
        <property name="username" value="${user}" />
        <property name="password" value="${password}" />
    </bean> 
     
     <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>
   
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <!-- 无需指定引用SqlSessionFactory，因为MapperScannerConfigurer在创建映射器时会通过自动装配的方式来引用。 -->
       <!--  <property name="sqlSessionFactory" ref="sqlSessionFactory"/> -->
        <property name="basePackage" value="com.dao" />
    </bean>
    
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
    
	<!-- 开启基于@AspectJ切面的注解处理器 -->
	<aop:aspectj-autoproxy />
	<!-- 将日志通知AllLogAdvice交给Spring容器管理 -->
	<bean class="com.aop.AllLogAdvice" />  
</beans>